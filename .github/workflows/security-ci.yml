name: Security CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

env:
  DOTNET_VERSION: "9.0.x"
  SERVICE_URL: http://127.0.0.1:5090
  SNYK_SEVERITY_THRESHOLD: high

jobs:
  sast:
    name: SAST - Semgrep
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Setup Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f
        with:
          python-version: "3.x"

      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep scan
        run: |
          semgrep --config "p/csharp" --config "auto" --severity ERROR --error --json --output semgrep-report.json
          semgrep --config "p/csharp" --config "auto" --severity ERROR --sarif --output semgrep-report.sarif

      - name: Upload Semgrep artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: semgrep-report
          path: |
            semgrep-report.json
            semgrep-report.sarif

      - name: Publish Semgrep SARIF to security dashboard
        uses: github/codeql-action/upload-sarif@528ca598d956c91826bd742262cdfc5d02b77710
        with:
          sarif_file: semgrep-report.sarif

  sca:
    name: SCA - Snyk
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: "20"

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth "$SNYK_TOKEN"

      - name: Run Snyk test (fails on high/critical)
        run: |
          snyk test --all-projects --severity-threshold="$SNYK_SEVERITY_THRESHOLD" --json-file-output=snyk-report.json --sarif-file-output=snyk-report.sarif

      - name: Upload Snyk artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: snyk-report
          path: |
            snyk-report.json
            snyk-report.sarif

      - name: Publish Snyk SARIF to security dashboard
        uses: github/codeql-action/upload-sarif@528ca598d956c91826bd742262cdfc5d02b77710
        with:
          sarif_file: snyk-report.sarif

  dast:
    name: DAST - OWASP ZAP
    runs-on: ubuntu-latest
    needs: [sast, sca]
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744

      - name: Setup .NET
        uses: actions/setup-dotnet@55ec9447dda3d1cf6bd587150f3262f30ee10815
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore and build API
        run: |
          dotnet restore InvestmentAPI/InvestmentAPI.csproj
          dotnet build InvestmentAPI/InvestmentAPI.csproj --configuration Release

      - name: Launch API for scanning
        run: |
          dotnet run --project InvestmentAPI/InvestmentAPI.csproj --configuration Release --urls "$SERVICE_URL" &
          for i in {1..30}; do
            if curl --silent --fail "$SERVICE_URL" >/dev/null; then
              break
            fi
            sleep 2
          done

      - name: Run OWASP ZAP baseline scan (fails on high/critical)
        run: |
          set -euo pipefail
          if docker run --rm \
            --user root \
            --network host \
            -v "${{ github.workspace }}:/zap/wrk" \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t "$SERVICE_URL" \
              -r zap-report.html \
              -J zap-report.json \
              -l FAIL
          then
            ZAP_EXIT=0
          else
            ZAP_EXIT=$?
          fi
          if [ "$ZAP_EXIT" -ge 2 ]; then
            echo "::error::ZAP baseline encountered an execution error (exit $ZAP_EXIT)"
            exit "$ZAP_EXIT"
          fi
          if [ ! -f zap-report.json ]; then
            echo "::error::ZAP JSON report was not generated"
            exit 1
          fi
          HIGH_COUNT=$(jq '[.site[]?.alerts[]? | select(.risk == "High")] | length' zap-report.json)
          if [ "$HIGH_COUNT" -gt 0 ]; then
            echo "::error::ZAP detected $HIGH_COUNT high risk alerts"
            exit 1
          fi
          echo "ZAP baseline completed without high risk alerts. Ignoring warnings."
        shell: bash

      - name: Stop API
        if: always()
        run: pkill dotnet || true

      - name: Upload ZAP artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: zap-report
          path: |
            zap-report.html
            zap-report.json

  summary-and-notify:
    name: Security summary & notification
    if: always()
    needs: [sast, sca, dast]
    runs-on: ubuntu-latest
    steps:
      - name: Append security scan summary
        run: |
          cat <<SUMMARY >> "$GITHUB_STEP_SUMMARY"
          ## Security scan overview
          | Check | Status | High/Critical gating |
          | --- | --- | --- |
          | SAST (Semgrep) | ${{ needs.sast.result }} | Fails on Semgrep findings with severity ERROR |
          | SCA (Snyk) | ${{ needs.sca.result }} | Fails when vulnerabilities >= ${{ env.SNYK_SEVERITY_THRESHOLD }} |
          | DAST (OWASP ZAP) | ${{ needs.dast.result }} | Fails when ZAP reports High risk alerts |
          SUMMARY

      - name: Slack alert on failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SAST_STATUS: ${{ needs.sast.result }}
          SCA_STATUS: ${{ needs.sca.result }}
          DAST_STATUS: ${{ needs.dast.result }}
        run: |
          if [ -z "$SLACK_WEBHOOK_URL" ]; then
            echo "SLACK_WEBHOOK_URL not set; skipping Slack notification."
            exit 0
          fi
          message="Security CI falhou. Semgrep: $SAST_STATUS | Snyk: $SCA_STATUS | ZAP: $DAST_STATUS"
          payload=$(jq -n --arg text "$message" '{text: $text}')
          curl -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"


