name: OWASP ZAP Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  zap-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9
        with:
          dotnet-version: '9.0.x'

      - name: Build and start application
        run: |
          dotnet build InvestmentAPI/InvestmentAPI.csproj
          nohup dotnet run --project InvestmentAPI/InvestmentAPI.csproj --urls http://0.0.0.0:5090 &
          sleep 30    # aguarda a API subir

      - name: Run OWASP ZAP Baseline Scan
        continue-on-error: true           # ← não interrompe o job mesmo com exit code != 0
        run: |
          chmod -R 777 $GITHUB_WORKSPACE
          docker run --rm \
            --user root \
            --network host \
            -v ${{ github.workspace }}:/zap/wrk \
            ghcr.io/zaproxy/zaproxy \
            zap-baseline.py \
            -t http://localhost:5090 \
            -r zap-report.html \
            --fail-on error               # mantém a verificação de erro crítico

      - name: Upload ZAP Report as Artifact
        if: always()                      # ← garante execução mesmo que etapa anterior “falhe”
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: zap-report
          path: zap-report.html
